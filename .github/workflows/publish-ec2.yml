name: Publish Docker image to ec2
on: [push]
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: lavanya81
          password: Lavanyareddy@12345

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: lavanya81/test-docker-git

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    name: deploy to EC2
    runs-on: ubuntu-latest
    needs:
      - push_to_registry
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      # - name: checking into repo
      #   uses: actions/checkout@v2
      # - name: Add SSH key
      #   env:
      #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #   run: |
      #     mkdir -p /home/runner/.ssh
      #     echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      #     echo -e "${{ secrets.SSH_KEY }}" > /home/runner/.ssh/github_actions
      #     chmod 600 /home/runner/.ssh/github_actions
      #     ssh-agent -a $SSH_AUTH_SOCK > /dev/null
      #     ssh-add /home/runner/
      # - name: Build and deploy
      #   env:
      #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #   run: |
      #     ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.IP_ADDRESS }} -i ~/.ssh/github_actions "docker login -u ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
      - name: get ec2 ip address
        id: ipaddress
        run: echo "ipaddress=`aws ec2 describe-instances --query="Reservations[0].Instances[0].PublicIpAddress" --filters Name=tag:Name,Values="to-test-docker-image-ec2" | xargs`" >> $GITHUB_OUTPUT
      - name: Public IP Address of EC2 instance
        run: echo "${{ steps.ipaddress.outputs.ipaddress }}"
      - name: connect to ec2 instance
        uses: fifsky/ssh-action@master
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD}}
          host: ${{ steps.ipaddress.outputs.ipaddress }}
          user: ubuntu
          key: ${{ secrets.SSH_KEY}}
